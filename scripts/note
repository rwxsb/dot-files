#!/bin/bash

zetdir='Repositories/me/zet/'
myzetdir="$HOME/$zetdir"
isosec=$(date -u +%Y%m%d%H%M%S)

createNote(){
	currentdir=$(pwd)
	cd $myzetdir
	git pull origin master;
	mkdir $isosec
	cd $isosec
	if [ -f ${@:-""} ];
		#echo $@
		then echo "## $@" >> README.md; 
	else
		touch README.md
	fi
	vi README.md
	wait
	if [[ `git status --porcelain` ]]; then
		git add *;
		git commit -m "($isosec) $(grep "## " README.md)";
		git push origin master;
	fi
	cd $currentdir
}

promptForExit() {
    while true; do
        read -p "$* [y/n]: " yn
        case $yn in
            [Yy]*) return 0  ;;
            [Nn]*) echo "Aborted" ; return  1 ;;
        esac
    done
}

findNote(){
	currentdir=$(pwd)
	cd $myzetdir
	foundisosecs=$(grep -R $OPTARG . | awk '{print substr($1,3,14)}' | uniq)
	cnt=0
        for isosec in $foundisosecs
        do
                echo "$cnt) $isosec - $(grep "## " $isosec/README.md)"
                ((cnt=$cnt+1));
        done
	while true; do
		echo -n "Select note to edit, press N/n to continue: "
		read note
			case $(( ($note >= 0 && note < $cnt)* 1)) in
				(1)
					isosecs=($(echo $foundisosecs | tr " " "\n"))
                    editNote "${isosecs[note]}"
                    exit 0
                    ;;
			esac
			case $note in
				[Nn*])
					exit 0
					;;

				?)
					echo "Inserted value is not enumerated option or recognized"
					exit 1
					;;
			esac
	done
	cd $currentdir
}

editNote(){
	currentdir=$(pwd)
	cd $myzetdir
	vi $@/README.md
	wait;
	if [[ `git status --porcelain` ]]; then
		git add *;
		git commit -m "($@) $(grep "## " $1/README.md)";
		git push origin master;
	fi
	cd $currentdir
}


while getopts "e:f:c" OPTION
do
        case $OPTION in
		e)
		editNote $OPTARG
		exit 0;
		;;
		f)
		findNote $OPTARG
		exit 0
		;;
                c)
                createNote $OPTARG
                exit 0
                ;;
		?)
		echo "Please specify some arguments, I don't 				know what any of the $@ means"
		exit -1
		;;
        esac
done
